# -*- coding: utf-8 -*-

"""
This file is part of the PROPheT tool.

Copyright (C) 2016: MKLab <pmitzias@iti.gr; mriga@iti.gr; skontopo@iti.gr>

http://mklab.iti.gr/project/prophet-ontology-populator
https://github.com/MKLab-ITI/prophet

Licensed under the Apache License, Version 2.0 (the "License").
You may use this file in compliance with the License. 
For more details, see LICENCE file. 

"""

# Form implementation generated from reading ui file 'ui\Preferences.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_Preferences(object):
    def setupUi(self, Preferences):
        Preferences.setObjectName(_fromUtf8("Preferences"))
        Preferences.resize(685, 441)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/preferences.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Preferences.setWindowIcon(icon)
        self.gridLayout = QtGui.QGridLayout(Preferences)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.progressBarLoad = QtGui.QProgressBar(Preferences)
        self.progressBarLoad.setMinimumSize(QtCore.QSize(100, 10))
        self.progressBarLoad.setMaximumSize(QtCore.QSize(140, 12))
        self.progressBarLoad.setProperty("value", 40)
        self.progressBarLoad.setTextVisible(False)
        self.progressBarLoad.setObjectName(_fromUtf8("progressBarLoad"))
        self.gridLayout.addWidget(self.progressBarLoad, 1, 0, 1, 1)
        self.tabWidgetPreferences = QtGui.QTabWidget(Preferences)
        self.tabWidgetPreferences.setContextMenuPolicy(QtCore.Qt.PreventContextMenu)
        self.tabWidgetPreferences.setTabPosition(QtGui.QTabWidget.North)
        self.tabWidgetPreferences.setIconSize(QtCore.QSize(16, 12))
        self.tabWidgetPreferences.setObjectName(_fromUtf8("tabWidgetPreferences"))
        self.tabGeneral = QtGui.QWidget()
        self.tabGeneral.setObjectName(_fromUtf8("tabGeneral"))
        self.gridLayout_7 = QtGui.QGridLayout(self.tabGeneral)
        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
        self.lblCheckForUpdatesAtStartup = QtGui.QLabel(self.tabGeneral)
        self.lblCheckForUpdatesAtStartup.setObjectName(_fromUtf8("lblCheckForUpdatesAtStartup"))
        self.gridLayout_7.addWidget(self.lblCheckForUpdatesAtStartup, 0, 0, 1, 1)
        self.checkBoxCheckForUpdatesAtStartupOption = QtGui.QCheckBox(self.tabGeneral)
        self.checkBoxCheckForUpdatesAtStartupOption.setToolTip(_fromUtf8(""))
        self.checkBoxCheckForUpdatesAtStartupOption.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.checkBoxCheckForUpdatesAtStartupOption.setText(_fromUtf8(""))
        self.checkBoxCheckForUpdatesAtStartupOption.setChecked(False)
        self.checkBoxCheckForUpdatesAtStartupOption.setObjectName(_fromUtf8("checkBoxCheckForUpdatesAtStartupOption"))
        self.gridLayout_7.addWidget(self.checkBoxCheckForUpdatesAtStartupOption, 0, 3, 1, 1)
        self.line_4 = QtGui.QFrame(self.tabGeneral)
        self.line_4.setFrameShape(QtGui.QFrame.HLine)
        self.line_4.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_4.setObjectName(_fromUtf8("line_4"))
        self.gridLayout_7.addWidget(self.line_4, 1, 0, 1, 4)
        self.lblEMInstancesLimit = QtGui.QLabel(self.tabGeneral)
        self.lblEMInstancesLimit.setObjectName(_fromUtf8("lblEMInstancesLimit"))
        self.gridLayout_7.addWidget(self.lblEMInstancesLimit, 2, 0, 1, 1)
        self.spinBoxEMInstancesLimit = QtGui.QSpinBox(self.tabGeneral)
        self.spinBoxEMInstancesLimit.setMaximumSize(QtCore.QSize(85, 16777215))
        self.spinBoxEMInstancesLimit.setMinimum(1)
        self.spinBoxEMInstancesLimit.setMaximum(100000)
        self.spinBoxEMInstancesLimit.setObjectName(_fromUtf8("spinBoxEMInstancesLimit"))
        self.gridLayout_7.addWidget(self.spinBoxEMInstancesLimit, 2, 2, 1, 2, QtCore.Qt.AlignRight)
        self.line = QtGui.QFrame(self.tabGeneral)
        self.line.setFrameShape(QtGui.QFrame.HLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName(_fromUtf8("line"))
        self.gridLayout_7.addWidget(self.line, 3, 0, 1, 4)
        self.lblSameAsOption = QtGui.QLabel(self.tabGeneral)
        self.lblSameAsOption.setObjectName(_fromUtf8("lblSameAsOption"))
        self.gridLayout_7.addWidget(self.lblSameAsOption, 4, 0, 2, 1)
        self.comboBoxSameAsOption = QtGui.QComboBox(self.tabGeneral)
        self.comboBoxSameAsOption.setMaximumSize(QtCore.QSize(85, 16777215))
        self.comboBoxSameAsOption.setObjectName(_fromUtf8("comboBoxSameAsOption"))
        self.comboBoxSameAsOption.addItem(_fromUtf8(""))
        self.comboBoxSameAsOption.addItem(_fromUtf8(""))
        self.comboBoxSameAsOption.addItem(_fromUtf8(""))
        self.gridLayout_7.addWidget(self.comboBoxSameAsOption, 5, 1, 1, 3, QtCore.Qt.AlignRight)
        self.line_2 = QtGui.QFrame(self.tabGeneral)
        self.line_2.setFrameShape(QtGui.QFrame.HLine)
        self.line_2.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_2.setObjectName(_fromUtf8("line_2"))
        self.gridLayout_7.addWidget(self.line_2, 6, 0, 1, 4)
        self.lblPropertyEquivalentToOption = QtGui.QLabel(self.tabGeneral)
        self.lblPropertyEquivalentToOption.setObjectName(_fromUtf8("lblPropertyEquivalentToOption"))
        self.gridLayout_7.addWidget(self.lblPropertyEquivalentToOption, 7, 0, 2, 1)
        self.checkBoxPropertyEquivalentToOption = QtGui.QCheckBox(self.tabGeneral)
        self.checkBoxPropertyEquivalentToOption.setToolTip(_fromUtf8(""))
        self.checkBoxPropertyEquivalentToOption.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.checkBoxPropertyEquivalentToOption.setText(_fromUtf8(""))
        self.checkBoxPropertyEquivalentToOption.setChecked(False)
        self.checkBoxPropertyEquivalentToOption.setObjectName(_fromUtf8("checkBoxPropertyEquivalentToOption"))
        self.gridLayout_7.addWidget(self.checkBoxPropertyEquivalentToOption, 8, 3, 1, 1)
        self.line_5 = QtGui.QFrame(self.tabGeneral)
        self.line_5.setFrameShape(QtGui.QFrame.HLine)
        self.line_5.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_5.setObjectName(_fromUtf8("line_5"))
        self.gridLayout_7.addWidget(self.line_5, 9, 0, 1, 4)
        self.lblLabelOption = QtGui.QLabel(self.tabGeneral)
        self.lblLabelOption.setObjectName(_fromUtf8("lblLabelOption"))
        self.gridLayout_7.addWidget(self.lblLabelOption, 10, 0, 2, 1)
        self.checkBoxLabelOption = QtGui.QCheckBox(self.tabGeneral)
        self.checkBoxLabelOption.setToolTip(_fromUtf8(""))
        self.checkBoxLabelOption.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.checkBoxLabelOption.setText(_fromUtf8(""))
        self.checkBoxLabelOption.setChecked(False)
        self.checkBoxLabelOption.setObjectName(_fromUtf8("checkBoxLabelOption"))
        self.gridLayout_7.addWidget(self.checkBoxLabelOption, 11, 3, 1, 1)
        self.line_3 = QtGui.QFrame(self.tabGeneral)
        self.line_3.setFrameShape(QtGui.QFrame.HLine)
        self.line_3.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_3.setObjectName(_fromUtf8("line_3"))
        self.gridLayout_7.addWidget(self.line_3, 12, 0, 1, 4)
        spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem, 13, 3, 1, 1)
        self.btnSaveChangesInGeneralTab = QtGui.QPushButton(self.tabGeneral)
        self.btnSaveChangesInGeneralTab.setMinimumSize(QtCore.QSize(100, 0))
        self.btnSaveChangesInGeneralTab.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnSaveChangesInGeneralTab.setObjectName(_fromUtf8("btnSaveChangesInGeneralTab"))
        self.gridLayout_7.addWidget(self.btnSaveChangesInGeneralTab, 14, 1, 1, 3, QtCore.Qt.AlignRight)
        self.tabWidgetPreferences.addTab(self.tabGeneral, icon, _fromUtf8(""))
        self.tabMyModel = QtGui.QWidget()
        self.tabMyModel.setObjectName(_fromUtf8("tabMyModel"))
        self.gridLayout_6 = QtGui.QGridLayout(self.tabMyModel)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.btnAddMyModel = QtGui.QPushButton(self.tabMyModel)
        self.btnAddMyModel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnAddMyModel.setObjectName(_fromUtf8("btnAddMyModel"))
        self.gridLayout_6.addWidget(self.btnAddMyModel, 1, 1, 1, 1)
        self.tableWidgetMyModels = QtGui.QTableWidget(self.tabMyModel)
        self.tableWidgetMyModels.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidgetMyModels.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetMyModels.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.tableWidgetMyModels.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.tableWidgetMyModels.setShowGrid(True)
        self.tableWidgetMyModels.setObjectName(_fromUtf8("tableWidgetMyModels"))
        self.tableWidgetMyModels.setColumnCount(2)
        self.tableWidgetMyModels.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetMyModels.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetMyModels.setHorizontalHeaderItem(1, item)
        self.tableWidgetMyModels.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidgetMyModels.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_6.addWidget(self.tableWidgetMyModels, 0, 0, 1, 4)
        self.btnDeleteMyModel = QtGui.QPushButton(self.tabMyModel)
        self.btnDeleteMyModel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnDeleteMyModel.setObjectName(_fromUtf8("btnDeleteMyModel"))
        self.gridLayout_6.addWidget(self.btnDeleteMyModel, 1, 2, 1, 1)
        self.btnLoadMyModel = QtGui.QPushButton(self.tabMyModel)
        self.btnLoadMyModel.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnLoadMyModel.setObjectName(_fromUtf8("btnLoadMyModel"))
        self.gridLayout_6.addWidget(self.btnLoadMyModel, 1, 3, 1, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/load_model.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabMyModel, icon1, _fromUtf8(""))
        self.tabEndpoints = QtGui.QWidget()
        self.tabEndpoints.setObjectName(_fromUtf8("tabEndpoints"))
        self.gridLayout_2 = QtGui.QGridLayout(self.tabEndpoints)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.tableWidgetKnownEndpoints = QtGui.QTableWidget(self.tabEndpoints)
        self.tableWidgetKnownEndpoints.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidgetKnownEndpoints.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetKnownEndpoints.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.tableWidgetKnownEndpoints.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.tableWidgetKnownEndpoints.setShowGrid(True)
        self.tableWidgetKnownEndpoints.setObjectName(_fromUtf8("tableWidgetKnownEndpoints"))
        self.tableWidgetKnownEndpoints.setColumnCount(2)
        self.tableWidgetKnownEndpoints.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownEndpoints.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownEndpoints.setHorizontalHeaderItem(1, item)
        self.tableWidgetKnownEndpoints.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidgetKnownEndpoints.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_2.addWidget(self.tableWidgetKnownEndpoints, 0, 0, 1, 4)
        self.btnAddEndpoint = QtGui.QPushButton(self.tabEndpoints)
        self.btnAddEndpoint.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnAddEndpoint.setObjectName(_fromUtf8("btnAddEndpoint"))
        self.gridLayout_2.addWidget(self.btnAddEndpoint, 1, 1, 1, 1)
        self.btnSelectEndpoint = QtGui.QPushButton(self.tabEndpoints)
        self.btnSelectEndpoint.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnSelectEndpoint.setObjectName(_fromUtf8("btnSelectEndpoint"))
        self.gridLayout_2.addWidget(self.btnSelectEndpoint, 1, 3, 1, 1)
        self.btnDeleteEndpoint = QtGui.QPushButton(self.tabEndpoints)
        self.btnDeleteEndpoint.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnDeleteEndpoint.setObjectName(_fromUtf8("btnDeleteEndpoint"))
        self.gridLayout_2.addWidget(self.btnDeleteEndpoint, 1, 2, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/endpoint.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabEndpoints, icon2, _fromUtf8(""))
        self.tabNamespaces = QtGui.QWidget()
        self.tabNamespaces.setObjectName(_fromUtf8("tabNamespaces"))
        self.gridLayout_4 = QtGui.QGridLayout(self.tabNamespaces)
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.btnDeleteNamespace = QtGui.QPushButton(self.tabNamespaces)
        self.btnDeleteNamespace.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnDeleteNamespace.setObjectName(_fromUtf8("btnDeleteNamespace"))
        self.gridLayout_4.addWidget(self.btnDeleteNamespace, 1, 2, 1, 1)
        self.btnRestoreDefaultNamespaces = QtGui.QPushButton(self.tabNamespaces)
        self.btnRestoreDefaultNamespaces.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnRestoreDefaultNamespaces.setObjectName(_fromUtf8("btnRestoreDefaultNamespaces"))
        self.gridLayout_4.addWidget(self.btnRestoreDefaultNamespaces, 1, 3, 1, 1)
        self.btnAddNamespace = QtGui.QPushButton(self.tabNamespaces)
        self.btnAddNamespace.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnAddNamespace.setObjectName(_fromUtf8("btnAddNamespace"))
        self.gridLayout_4.addWidget(self.btnAddNamespace, 1, 1, 1, 1)
        self.tableWidgetKnownNamespaces = QtGui.QTableWidget(self.tabNamespaces)
        self.tableWidgetKnownNamespaces.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidgetKnownNamespaces.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetKnownNamespaces.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.tableWidgetKnownNamespaces.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.tableWidgetKnownNamespaces.setShowGrid(True)
        self.tableWidgetKnownNamespaces.setObjectName(_fromUtf8("tableWidgetKnownNamespaces"))
        self.tableWidgetKnownNamespaces.setColumnCount(2)
        self.tableWidgetKnownNamespaces.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownNamespaces.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownNamespaces.setHorizontalHeaderItem(1, item)
        self.tableWidgetKnownNamespaces.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidgetKnownNamespaces.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_4.addWidget(self.tableWidgetKnownNamespaces, 0, 0, 1, 4)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/namespaces.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabNamespaces, icon3, _fromUtf8(""))
        self.tabMapping = QtGui.QWidget()
        self.tabMapping.setObjectName(_fromUtf8("tabMapping"))
        self.gridLayout_5 = QtGui.QGridLayout(self.tabMapping)
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.btnDeleteAllMappings = QtGui.QPushButton(self.tabMapping)
        self.btnDeleteAllMappings.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnDeleteAllMappings.setObjectName(_fromUtf8("btnDeleteAllMappings"))
        self.gridLayout_5.addWidget(self.btnDeleteAllMappings, 1, 2, 1, 1)
        self.tableWidgetKnownMappings = QtGui.QTableWidget(self.tabMapping)
        self.tableWidgetKnownMappings.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidgetKnownMappings.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetKnownMappings.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.tableWidgetKnownMappings.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.tableWidgetKnownMappings.setShowGrid(True)
        self.tableWidgetKnownMappings.setObjectName(_fromUtf8("tableWidgetKnownMappings"))
        self.tableWidgetKnownMappings.setColumnCount(4)
        self.tableWidgetKnownMappings.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownMappings.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownMappings.setHorizontalHeaderItem(1, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownMappings.setHorizontalHeaderItem(2, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetKnownMappings.setHorizontalHeaderItem(3, item)
        self.tableWidgetKnownMappings.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidgetKnownMappings.horizontalHeader().setDefaultSectionSize(160)
        self.tableWidgetKnownMappings.horizontalHeader().setMinimumSectionSize(70)
        self.tableWidgetKnownMappings.horizontalHeader().setStretchLastSection(False)
        self.gridLayout_5.addWidget(self.tableWidgetKnownMappings, 0, 0, 1, 3)
        self.btnDeleteMapping = QtGui.QPushButton(self.tabMapping)
        self.btnDeleteMapping.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnDeleteMapping.setObjectName(_fromUtf8("btnDeleteMapping"))
        self.gridLayout_5.addWidget(self.btnDeleteMapping, 1, 1, 1, 1)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/mapping.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabMapping, icon4, _fromUtf8(""))
        self.tabLog = QtGui.QWidget()
        self.tabLog.setObjectName(_fromUtf8("tabLog"))
        self.gridLayout_3 = QtGui.QGridLayout(self.tabLog)
        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
        self.btnClearLog = QtGui.QPushButton(self.tabLog)
        self.btnClearLog.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btnClearLog.setObjectName(_fromUtf8("btnClearLog"))
        self.gridLayout_3.addWidget(self.btnClearLog, 1, 1, 1, 1)
        self.tableWidgetLogEntries = QtGui.QTableWidget(self.tabLog)
        self.tableWidgetLogEntries.setContextMenuPolicy(QtCore.Qt.PreventContextMenu)
        self.tableWidgetLogEntries.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetLogEntries.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
        self.tableWidgetLogEntries.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.tableWidgetLogEntries.setShowGrid(True)
        self.tableWidgetLogEntries.setObjectName(_fromUtf8("tableWidgetLogEntries"))
        self.tableWidgetLogEntries.setColumnCount(2)
        self.tableWidgetLogEntries.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetLogEntries.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetLogEntries.setHorizontalHeaderItem(1, item)
        self.tableWidgetLogEntries.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidgetLogEntries.horizontalHeader().setDefaultSectionSize(115)
        self.tableWidgetLogEntries.horizontalHeader().setMinimumSectionSize(100)
        self.tableWidgetLogEntries.horizontalHeader().setStretchLastSection(True)
        self.tableWidgetLogEntries.verticalHeader().setDefaultSectionSize(30)
        self.gridLayout_3.addWidget(self.tableWidgetLogEntries, 0, 0, 1, 2)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/log.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabLog, icon5, _fromUtf8(""))
        self.tabDatabase = QtGui.QWidget()
        self.tabDatabase.setObjectName(_fromUtf8("tabDatabase"))
        self.gridLayout_8 = QtGui.QGridLayout(self.tabDatabase)
        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
        self.tableWidgetDatabaseStats = QtGui.QTableWidget(self.tabDatabase)
        self.tableWidgetDatabaseStats.setMaximumSize(QtCore.QSize(16777215, 182))
        self.tableWidgetDatabaseStats.setContextMenuPolicy(QtCore.Qt.PreventContextMenu)
        self.tableWidgetDatabaseStats.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidgetDatabaseStats.setObjectName(_fromUtf8("tableWidgetDatabaseStats"))
        self.tableWidgetDatabaseStats.setColumnCount(1)
        self.tableWidgetDatabaseStats.setRowCount(6)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(1, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(2, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(3, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(4, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setVerticalHeaderItem(5, item)
        item = QtGui.QTableWidgetItem()
        self.tableWidgetDatabaseStats.setHorizontalHeaderItem(0, item)
        self.tableWidgetDatabaseStats.horizontalHeader().setVisible(False)
        self.tableWidgetDatabaseStats.horizontalHeader().setDefaultSectionSize(200)
        self.tableWidgetDatabaseStats.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_8.addWidget(self.tableWidgetDatabaseStats, 0, 0, 1, 5)
        self.btnExportDatabase = QtGui.QPushButton(self.tabDatabase)
        self.btnExportDatabase.setMaximumSize(QtCore.QSize(110, 16777215))
        self.btnExportDatabase.setObjectName(_fromUtf8("btnExportDatabase"))
        self.gridLayout_8.addWidget(self.btnExportDatabase, 2, 2, 1, 1)
        spacerItem1 = QtGui.QSpacerItem(20, 115, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem1, 1, 1, 1, 1)
        self.btnImportDatabase = QtGui.QPushButton(self.tabDatabase)
        self.btnImportDatabase.setMaximumSize(QtCore.QSize(110, 16777215))
        self.btnImportDatabase.setObjectName(_fromUtf8("btnImportDatabase"))
        self.gridLayout_8.addWidget(self.btnImportDatabase, 2, 3, 1, 1)
        self.btnResetToDefaultDatabase = QtGui.QPushButton(self.tabDatabase)
        self.btnResetToDefaultDatabase.setMaximumSize(QtCore.QSize(110, 16777215))
        self.btnResetToDefaultDatabase.setObjectName(_fromUtf8("btnResetToDefaultDatabase"))
        self.gridLayout_8.addWidget(self.btnResetToDefaultDatabase, 2, 4, 1, 1)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/database.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetPreferences.addTab(self.tabDatabase, icon6, _fromUtf8(""))
        self.gridLayout.addWidget(self.tabWidgetPreferences, 0, 0, 1, 4)
        self.btnClose = QtGui.QPushButton(Preferences)
        self.btnClose.setMaximumSize(QtCore.QSize(75, 16777215))
        self.btnClose.setObjectName(_fromUtf8("btnClose"))
        self.gridLayout.addWidget(self.btnClose, 1, 3, 1, 1)

        self.retranslateUi(Preferences)
        self.tabWidgetPreferences.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Preferences)

    def retranslateUi(self, Preferences):
        Preferences.setWindowTitle(_translate("Preferences", "Preferences", None))
        Preferences.setWhatsThis(_translate("Preferences", "Preferences window", None))
        self.progressBarLoad.setToolTip(_translate("Preferences", "Loading..", None))
        self.lblCheckForUpdatesAtStartup.setToolTip(_translate("Preferences", "Automatically check for updates when starting PROPheT", None))
        self.lblCheckForUpdatesAtStartup.setText(_translate("Preferences", "Check for PROPheT updates at startup", None))
        self.lblEMInstancesLimit.setToolTip(_translate("Preferences", "Define the maximum number of results that will be fetched from the External Model (values: 1-100000)", None))
        self.lblEMInstancesLimit.setText(_translate("Preferences", "Limit query results for instances from External Model to:", None))
        self.spinBoxEMInstancesLimit.setToolTip(_translate("Preferences", "Maximum number of instances fetched from the External Model", None))
        self.spinBoxEMInstancesLimit.setWhatsThis(_translate("Preferences", "Maximum number of instances fetched from the External Model", None))
        self.lblSameAsOption.setToolTip(_translate("Preferences", "When preference is checked, a triple like the following is inserted: <my_instance owl:sameAs external_instance>", None))
        self.lblSameAsOption.setText(_translate("Preferences", "Connect new instances with original External Model instances with property:", None))
        self.comboBoxSameAsOption.setItemText(0, _translate("Preferences", "owl:sameAs", None))
        self.comboBoxSameAsOption.setItemText(1, _translate("Preferences", "rdfs:seeAlso", None))
        self.comboBoxSameAsOption.setItemText(2, _translate("Preferences", "None", None))
        self.lblPropertyEquivalentToOption.setToolTip(_translate("Preferences", "When preference is checked, a triple like the following is inserted: <my_model_property owl:equivalentProperty external_model_property>", None))
        self.lblPropertyEquivalentToOption.setText(_translate("Preferences", "Connect My Model data properties to External Model data properties with owl:equivalentTo", None))
        self.lblLabelOption.setToolTip(_translate("Preferences", "When preference is checked, a triple like the following is inserted: <my_instance owl:sameAs external_instance>", None))
        self.lblLabelOption.setText(_translate("Preferences", "Import rdfs:label annotations to new instances", None))
        self.btnSaveChangesInGeneralTab.setToolTip(_translate("Preferences", "Save changes made in General tab", None))
        self.btnSaveChangesInGeneralTab.setWhatsThis(_translate("Preferences", "Save changes made in General tab", None))
        self.btnSaveChangesInGeneralTab.setText(_translate("Preferences", "Save changes", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabGeneral), _translate("Preferences", "General", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabGeneral), _translate("Preferences", "General preferences", None))
        self.btnAddMyModel.setToolTip(_translate("Preferences", "Add a new model", None))
        self.btnAddMyModel.setWhatsThis(_translate("Preferences", "Add a new model", None))
        self.btnAddMyModel.setText(_translate("Preferences", "Add model...", None))
        self.tableWidgetMyModels.setToolTip(_translate("Preferences", "List of all initial (source) models", None))
        self.tableWidgetMyModels.setWhatsThis(_translate("Preferences", "A list of my models", None))
        item = self.tableWidgetMyModels.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "Name", None))
        item = self.tableWidgetMyModels.horizontalHeaderItem(1)
        item.setText(_translate("Preferences", "URI", None))
        self.btnDeleteMyModel.setToolTip(_translate("Preferences", "Delete selected model", None))
        self.btnDeleteMyModel.setWhatsThis(_translate("Preferences", "Delete selected model", None))
        self.btnDeleteMyModel.setText(_translate("Preferences", "Delete model", None))
        self.btnLoadMyModel.setToolTip(_translate("Preferences", "Load selected model", None))
        self.btnLoadMyModel.setWhatsThis(_translate("Preferences", "Load selected model", None))
        self.btnLoadMyModel.setText(_translate("Preferences", "Load", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabMyModel), _translate("Preferences", "My models", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabMyModel), _translate("Preferences", "My model preferences", None))
        self.tableWidgetKnownEndpoints.setToolTip(_translate("Preferences", "List of all stored endpoints", None))
        self.tableWidgetKnownEndpoints.setWhatsThis(_translate("Preferences", "A list of all known endpoints", None))
        item = self.tableWidgetKnownEndpoints.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "Name", None))
        item = self.tableWidgetKnownEndpoints.horizontalHeaderItem(1)
        item.setText(_translate("Preferences", "Endpoint URI", None))
        self.btnAddEndpoint.setToolTip(_translate("Preferences", "Add a new endpoint", None))
        self.btnAddEndpoint.setWhatsThis(_translate("Preferences", "Add a new endpoint", None))
        self.btnAddEndpoint.setText(_translate("Preferences", "Add endpoint...", None))
        self.btnSelectEndpoint.setToolTip(_translate("Preferences", "Set selected endpoint as default", None))
        self.btnSelectEndpoint.setWhatsThis(_translate("Preferences", "Set selected endpoint as default", None))
        self.btnSelectEndpoint.setText(_translate("Preferences", "Select", None))
        self.btnDeleteEndpoint.setToolTip(_translate("Preferences", "Delete selected endpoint", None))
        self.btnDeleteEndpoint.setWhatsThis(_translate("Preferences", "Delete selected endpoint", None))
        self.btnDeleteEndpoint.setText(_translate("Preferences", "Delete endpoint", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabEndpoints), _translate("Preferences", "Endpoints", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabEndpoints), _translate("Preferences", "Endpoint preferences", None))
        self.btnDeleteNamespace.setToolTip(_translate("Preferences", "Delete selected namespace", None))
        self.btnDeleteNamespace.setWhatsThis(_translate("Preferences", "Delete selected endpoint", None))
        self.btnDeleteNamespace.setText(_translate("Preferences", "Delete namespace", None))
        self.btnRestoreDefaultNamespaces.setToolTip(_translate("Preferences", "Restore default namespaces", None))
        self.btnRestoreDefaultNamespaces.setWhatsThis(_translate("Preferences", "Delete selected endpoint", None))
        self.btnRestoreDefaultNamespaces.setText(_translate("Preferences", "Restore default", None))
        self.btnAddNamespace.setToolTip(_translate("Preferences", "Add a new namespace", None))
        self.btnAddNamespace.setWhatsThis(_translate("Preferences", "Add a new endpoint", None))
        self.btnAddNamespace.setText(_translate("Preferences", "Add namespace...", None))
        self.tableWidgetKnownNamespaces.setToolTip(_translate("Preferences", "List of all stored namespaces", None))
        self.tableWidgetKnownNamespaces.setWhatsThis(_translate("Preferences", "A list of all known endpoints", None))
        item = self.tableWidgetKnownNamespaces.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "Prefix", None))
        item = self.tableWidgetKnownNamespaces.horizontalHeaderItem(1)
        item.setText(_translate("Preferences", "URI", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabNamespaces), _translate("Preferences", "Namespaces", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabNamespaces), _translate("Preferences", "Namespace preferences", None))
        self.btnDeleteAllMappings.setToolTip(_translate("Preferences", "Delete selected mapping", None))
        self.btnDeleteAllMappings.setWhatsThis(_translate("Preferences", "Delete selected mapping", None))
        self.btnDeleteAllMappings.setText(_translate("Preferences", "Delete all", None))
        self.tableWidgetKnownMappings.setToolTip(_translate("Preferences", "List of all stored mappings", None))
        self.tableWidgetKnownMappings.setWhatsThis(_translate("Preferences", "A list of all known mappings", None))
        item = self.tableWidgetKnownMappings.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "My model", None))
        item = self.tableWidgetKnownMappings.horizontalHeaderItem(1)
        item.setText(_translate("Preferences", "My property", None))
        item = self.tableWidgetKnownMappings.horizontalHeaderItem(2)
        item.setText(_translate("Preferences", "External Model\'s property", None))
        item = self.tableWidgetKnownMappings.horizontalHeaderItem(3)
        item.setText(_translate("Preferences", "External model", None))
        self.btnDeleteMapping.setToolTip(_translate("Preferences", "Delete selected mapping", None))
        self.btnDeleteMapping.setWhatsThis(_translate("Preferences", "Delete selected mapping", None))
        self.btnDeleteMapping.setText(_translate("Preferences", "Delete mapping", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabMapping), _translate("Preferences", "Mapping", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabMapping), _translate("Preferences", "Mapping preferences", None))
        self.btnClearLog.setToolTip(_translate("Preferences", "Clear log entries", None))
        self.btnClearLog.setWhatsThis(_translate("Preferences", "Delete log entries", None))
        self.btnClearLog.setText(_translate("Preferences", "Clear log", None))
        self.tableWidgetLogEntries.setToolTip(_translate("Preferences", "List of log entries", None))
        self.tableWidgetLogEntries.setWhatsThis(_translate("Preferences", "List of log entries", None))
        item = self.tableWidgetLogEntries.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "Time", None))
        item = self.tableWidgetLogEntries.horizontalHeaderItem(1)
        item.setText(_translate("Preferences", "Description", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabLog), _translate("Preferences", "Log", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabLog), _translate("Preferences", "Log preferences", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(0)
        item.setText(_translate("Preferences", "My Models", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(1)
        item.setText(_translate("Preferences", "Endpoints", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(2)
        item.setText(_translate("Preferences", "Known namespaces", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(3)
        item.setText(_translate("Preferences", "Property mappings", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(4)
        item.setText(_translate("Preferences", "Distinct pairs MM/EM in mappings", None))
        item = self.tableWidgetDatabaseStats.verticalHeaderItem(5)
        item.setText(_translate("Preferences", "Log entries", None))
        item = self.tableWidgetDatabaseStats.horizontalHeaderItem(0)
        item.setText(_translate("Preferences", "Value", None))
        self.btnExportDatabase.setToolTip(_translate("Preferences", "Export current database", None))
        self.btnExportDatabase.setWhatsThis(_translate("Preferences", "Save changes made in General tab", None))
        self.btnExportDatabase.setText(_translate("Preferences", "Export database...", None))
        self.btnImportDatabase.setToolTip(_translate("Preferences", "Select a database to import", None))
        self.btnImportDatabase.setWhatsThis(_translate("Preferences", "Save changes made in General tab", None))
        self.btnImportDatabase.setText(_translate("Preferences", "Import database...", None))
        self.btnResetToDefaultDatabase.setToolTip(_translate("Preferences", "Reset to default database", None))
        self.btnResetToDefaultDatabase.setWhatsThis(_translate("Preferences", "Save changes made in General tab", None))
        self.btnResetToDefaultDatabase.setText(_translate("Preferences", "Reset to default", None))
        self.tabWidgetPreferences.setTabText(self.tabWidgetPreferences.indexOf(self.tabDatabase), _translate("Preferences", "Database", None))
        self.tabWidgetPreferences.setTabToolTip(self.tabWidgetPreferences.indexOf(self.tabDatabase), _translate("Preferences", "Database preferences", None))
        self.btnClose.setToolTip(_translate("Preferences", "Close Preferences window", None))
        self.btnClose.setWhatsThis(_translate("Preferences", "Close Preferences window", None))
        self.btnClose.setText(_translate("Preferences", "Close", None))

import preferences_resources_rc
